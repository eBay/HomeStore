name: Conan Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        build-type: ["Debug", "Release"]
        malloc-impl: ["libc", "tcmalloc", "jemalloc"]
        prerelease: ["True", "False"]
        sanitize: ["MemCheck", "NoCheck"]
        exclude:
          - build-type: Debug
            prerelease: "True"
          - build-type: Debug
            malloc-impl: tcmalloc
          - build-type: Debug
            malloc-impl: jemalloc
          - build-type: Release
            malloc-impl: libc
          - build-type: Release
            sanitize: "MemCheck"
          - prerelease: "True"
            malloc-impl: jemalloc

    steps:
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"

    - name: Setup Conan
      run: |
        sudo apt-get install -y libaio-dev
        python -m pip install --upgrade pip
        python -m pip install pyelftools
        python -m pip install conan~=1.0
        conan user
        conan profile new --detect default
        # Set std::string to non-CoW C++11 version
        sed -i 's,compiler.libcxx=libstdc++$,compiler.libcxx=libstdc++11,g' ~/.conan/profiles/default

    - name: Retrieve Sisl
      uses: actions/checkout@v3
      with:
        repository: ebay/sisl
        path: deps/sisl
        ref: master

    - name: Retrieve IOMgr
      uses: actions/checkout@v3
      with:
        repository: ebay/IOManager
        path: deps/iomgr
        ref: master

    - name: Restore Dependency Cache
      id: restore-3rd-party
      uses: actions/cache/restore@v3
      with:
        path: |
          ~/.conan/data/dpdk
          ~/.conan/data/fio
          ~/.conan/data/folly
          ~/.conan/data/gperftools
          ~/.conan/data/grpc_internal
          ~/.conan/data/jemalloc
          ~/.conan/data/liburing
          ~/.conan/data/prerelease_dummy
          ~/.conan/data/spdk
          ~/.conan/data/spdlog
        key: ${{ matrix.build-type }}-${{ matrix.malloc-impl }}

    - name: Export Sisl and Dependencies
      run: |
        conan export deps/sisl/3rd_party/gperftools
        conan export deps/sisl/3rd_party/jemalloc
        conan export deps/sisl/3rd_party/prerelease_dummy
        conan export deps/sisl oss/master

    - name: Build IOMgr and Dependencies
      run: |
        rm -rf deps/iomgr/test_package
        conan export deps/iomgr/3rd_party/dpdk
        conan export deps/iomgr/3rd_party/grpc_internal
        conan export deps/iomgr/3rd_party/fio
        conan export deps/iomgr/3rd_party/spdk
        conan create \
            -o sisl:prerelease=${{ matrix.prerelease }} \
            -o sisl:malloc_impl=${{ matrix.malloc-impl }} \
            -o sisl:testing=False \
            -o iomgr:testing=off \
            -s build_type=${{ matrix.build-type }} \
            --build missing deps/iomgr oss/master

    - name: Cleanup build directories
      run: |
        rm -rf ~/.conan/data/*/*/*/*/build

    - name: Save Dependency Cache
      id: save-3rd-party
      uses: actions/cache/save@v3
      with:
        path: |
          ~/.conan/data/dpdk
          ~/.conan/data/fio
          ~/.conan/data/folly
          ~/.conan/data/gperftools
          ~/.conan/data/grpc_internal
          ~/.conan/data/jemalloc
          ~/.conan/data/liburing
          ~/.conan/data/prerelease_dummy
          ~/.conan/data/spdk
          ~/.conan/data/spdlog
        key: ${{ matrix.build-type }}-${{ matrix.malloc-impl }}

    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sanitize_opt=$([[ $string == *"MemCheck"* ]] && echo "True" || echo "False")
        conan install \
            -o sisl:prerelease=${{ matrix.prerelease }} \
            -o sisl:malloc_impl=${{ matrix.malloc-impl }} \
            -o sanitize=${sanitize_opt} \
            -s build_type=${{ matrix.build-type }} \
            --build missing .

    - name: Build
      # Build your program with the given configuration
      run: |
        conan build .
