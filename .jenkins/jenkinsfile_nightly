pipeline {
    agent { label 'sds-builder-2204' }
    triggers {
          cron('TZ=US/Pacific\nH H(0-2) * * *')
    }

    environment {
        ORG = 'sds'
        HUB_URL = 'hub.tess.io'
        ARTIFACTORY_PASS = credentials('ARTIFACTORY_PASS')
    }
    stages {
        stage('Adjust Version') {
            steps {
                script {
                    sh(script: "sed -Ei 's,version = .*\"([[:digit:]]+\\.[[:digit:]]+\\.[[:digit:]]+).*,version = \"\\1-${env.BUILD_NUMBER}\",' conanfile.py")
                }
            }
        }
        stage('Get Version') {
            steps {
                script {
                    PROJECT = sh(script: "grep -m 1 'name =' conanfile.py | awk '{print \$3}' | tr -d '\n' | tr -d '\"'", returnStdout: true)
                    VER = sh(script: "grep -m 1 'version =' conanfile.py | awk '{print \$3}' | tr -d '\n' | tr -d '\"'", returnStdout: true)
                    NIGHTLY_TAG = "master-nightly-debug"
                    HUB_PATH = "${HUB_URL}/${ORG}/${PROJECT}"
                }
            }
        }
        stage('Build') {
            failFast true
            stages {
                stage('Adjust Tag for Master') {
                    steps {
                        sh(script: "sed -Ei 's,version = .*\"([[:digit:]]+\\.[[:digit:]]+\\.[[:digit:]]+).*,version = \"\\1-${env.BUILD_NUMBER}\",' conanfile.py")
                    }
                }
                stage("Build") {
                    steps {
                        sh "conan create --build missing -o sisl:prerelease=True -o homestore:sanitize=True -o homestore:testing=full -o homestore:skip_testing=True -pr debug . ${PROJECT}/${VER}@"
                        sh "find ${CONAN_USER_HOME} -type f -wholename '*bin/test_load' -exec cp {} .jenkins/test_load \\;"
                        sh "find ${CONAN_USER_HOME} -type f -wholename '*bin/test_volume' -exec cp {} .jenkins/test_volume \\;"
                        sh "find ${CONAN_USER_HOME} -type f -wholename '*bin/check_btree' -exec cp {} .jenkins/check_btree \\;"
                        sh "find ${CONAN_USER_HOME} -type f -wholename '*bin/test_log_store' -exec cp {} .jenkins/test_log_store \\;"
                        sh "find ${CONAN_USER_HOME} -type f -wholename '*bin/test_meta_blk_mgr' -exec cp {} .jenkins/test_meta_blk_mgr \\;"
                        sh "find ${CONAN_USER_HOME} -type f -wholename '*bin/hs_svc_tool ' -exec cp {} .jenkins/hs_svc_tool \\;"
                        sh "find . -type f -wholename '*test_scripts/vol_test.py' -exec cp -a {} .jenkins/vol_test.py \\;"
                        sh "find ${CONAN_USER_HOME} -type d -wholename '*bin/scripts' -exec cp -a {} .jenkins/scripts \\;"
                        sh "find ${CONAN_USER_HOME} -type f -wholename '*bin/test_log_store' -exec cp {} .jenkins/test_log_store \\;"
                    }
                }
                stage("Image") {
                    steps {
                        withDockerRegistry([credentialsId: 'sds-sds', url: "https://${HUB_URL}"]) {
                            sh "docker build -t ${HUB_PATH}:${NIGHTLY_TAG} .jenkins/"
                            retry(3) {
                                sh "docker push ${HUB_PATH}:${NIGHTLY_TAG}"
                            }
                        }
                    }
                }
            }
        }
   }

   post {
        failure {
	    slackSend color: '#E43237', channel: '#homestore-build', message: "@here [Nightly] HomeStore build *${PROJECT}/${VER}* has had a failure: ${BUILD_URL}"
        }
        success {
            slackSend color: '#85B717', channel: '#homestore-build', message: "*[Nightly] HomeStore build *${PROJECT}/${VER}* has succeeded."
        }
   }
}
